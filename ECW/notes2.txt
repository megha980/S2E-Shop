// Django Tutorial Telusko

Free and open source web framework.
framework : - a combination of components and pkgs 

MVC :- model view controller (help you to build good application)

model = data
view = html format
controller = control this operation

In Django we have MVT not MVC

t = Template

Django pros: - fast, large number of components(login, database connectivity all this things comes bundeled in django)
, security, scalabilty(you want to have multiple user)

ORM concept for database

urls.py/shop
views.py/shop
urls.py/main project - use function and import it 
                        include ('shop.urls')

Template - html files 
Template inheritance - extands base html file

# as a client when you send a request to a server, you are basically sending an object, that object has some 
value like adding two number then a, b two numbers will be in that object.

then server send you response back as a string.

GET vs POST | HTTP Request Methods (Hyper-text transmission protocol)

- when you send a request to a server bydefault you have method GET.
- Request Methods we have :
                            GET
                            POST
                            PUT
                            DELETE
                            HEAD
                            CONNECT
                            OPTION
                            TRACE
                            PATCH

GET - when you want an image from a server you are expecting data from a server. getting something.
POST - want to send something to the server, like filing a form and sending personal data to the sever.
PUT - update the data on the server
                            
The GET Method
GET is used to request data from a specified resource.

Note that the query string (name/value pairs) is sent in the URL of a GET request:

/test/demo_form.php?name1=value1&name2=value2
Some notes on GET requests:

GET requests can be cached
GET requests remain in the browser history
GET requests can be bookmarked
GET requests should never be used when dealing with sensitive data
GET requests have length restrictions
GET requests are only used to request data (not modify)


The POST Method
POST is used to send data to a server to create/update a resource.

The data sent to the server with POST is stored in the request body of the HTTP request:

POST /test/demo_form.php HTTP/1.1
Host: w3schools.com

name1=value1&name2=value2
Some notes on POST requests:

POST requests are never cached
POST requests do not remain in the browser history
POST requests cannot be bookmarked
POST requests have no restrictions on data length


Definition
Cross-Site Request Forgery (CSRF) is an attack that forces authenticated users to submit a
 request to a Web application against which they are currently authenticated. 
CSRF attacks exploit the trust a Web application has in an authenticated user.


A CSRF secure application assigns a unique CSRF token for every user session. These tokens
 are inserted within hidden parameters of HTML forms related to critical server-side operations. 
 They are then sent to client browsers.

It is the application team’s responsibility to identify which server-side operations 
are sensitive in nature. The CSRF tokens must be a part of the HTML form—not stored in session cookies.
 The easiest way to add a non-predictable parameter is to use a secure hash function (e.g., SHA-2) to
  hash the user’s session ID. To ensure randomness, 
the tokens must be generated by a cryptographically secure random number generator.

MVT (model view template)

request-> django-> url-> views-> model +  template

setup Django:

1. download python
2. in powershell
   django-admin --version
   pip install django
